# This workflow is copied into every Bača score directory.

name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Repo checked out into $GITHUB_WORKSPACE
# $GITHUB_WORKSPACE is wrapper directory
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Log environment variables
      run: |
        python --version
        python -m pip install --upgrade pip
        echo $HOME
        echo $GITHUB_WORKSPACE
        echo $PATH

    - name: Install LilyPond
      run: |
        lilypond=/tmp/lilypond
        lilypond_url=http://lilypond.org/download/binaries/linux-64/
        lilypond_source=lilypond-2.23.3-1.linux-64.sh
        wget -q -O $lilypond $lilypond_url/$lilypond_source
        sh $lilypond --batch

    - name: Install Abjad
      run: |
        git clone -b trevor/dev https://github.com/Abjad/abjad.git /tmp/abjad
        pip install -e /tmp/abjad

    - name: Install rmakers
      run: |
        git clone https://github.com/Abjad/abjad-ext-rmakers.git /tmp/abjad-ext-rmakers
        pip install /tmp/abjad-ext-rmakers

    - name: Install Bača
      run: |
        git clone https://github.com/trevorbaca/baca.git /tmp/baca
        # -e to make sure baca/boilerplate directory is copied
        pip install -e /tmp/baca

    - name: Install this score
      run: pip install -e .

    - name: Prime parser tables
      run: /tmp/abjad/scr/prime-parser-tables

    - name: Set scores directory for path management
      run: |
        CFG=~/.abjad/abjad.cfg
        echo composer_scores_directory = $(dirname $GITHUB_WORKSPACE) > $CFG
        cat ~/.abjad/abjad.cfg

    - name: Log versions
      run: |
        black --version
        flake8 --version
        isort --version
        pytest --version

    - name: Run black, flake8, isort
      run: |
        make black-check
        make flake8
        make isort-check

    - name: Run doctest
      run: |
        export PATH=/home/runner/bin:$PATH
        /tmp/baca/scr/doctest $GITHUB_WORKSPACE

    - name: Run pytest
      run: |
        export PATH=/home/runner/bin:${PATH}
        NAME=$(basename $GITHUB_WORKSPACE)
        if [ -e $GITHUB_WORKSPACE/$NAME/test.py ]; then
            py.test -rf $GITHUB_WORKSPACE/$NAME/test.py
        fi

    - name: Check definition files
      run: |
        NAME=$(basename $GITHUB_WORKSPACE)
        cd $GITHUB_WORKSPACE/$NAME/segments
        export PATH=/tmp/baca/scr:${PATH}
        RC=0
        for path in $(find . -name definition.py | sort); do
            echo -n "Checking $path ... "
            SECONDS=0
            python $path 1>/dev/null 2>&1
            if [ $? -eq 0 ]; then
                echo OK "($SECONDS sec.)"
            else
                RC=1
                echo FAIL "($SECONDS sec.)"
            fi
        done
        echo
        exit $RC

    - name: Rerender segments
      run: |
        export BACA=/tmp/baca
        export PATH=$BACA/scr:/home/runner/bin:$PATH
        package_name=$(basename "$GITHUB_WORKSPACE")
        wrapper_directory="$GITHUB_WORKSPACE"
        echo Wrapper directory is "$wrapper_directory"
        contents_directory="$wrapper_directory"/"$package_name"
        echo Contents directory is "$contents_directory"
        segments_directory="$contents_directory"/segments
        echo Segments directory is "$segments_directory"
        if [ ! -d "$segments_directory"/01 ]; then
            echo Score contains no segments ...
            exit 0
        fi
        segment_directories=$(ls -d "$segments_directory"/[0-9]*)
        for segment_directory in $segment_directories; do
            echo Segment directory "$segment_directory" ...
            illustration_ly="$segment_directory/illustration.ly"
            illustration_old_ly="$segment_directory/illustration.old.ly"
            if [ -f "$illustration_ly" ]; then
                cp "$illustration_ly" "$illustration_old_ly"
            fi
            rm "$illustration_ly"
            illustration_ily="$segment_directory"/illustration.ily
            illustration_old_ily="$segment_directory"/illustration.old.ily
            if [ -f "$illustration_ily" ]; then
                cp "$illustration_ily" "$illustration_old_ily"
            fi
            rm "$illustration_ily"
            current_directory=$(pwd)
            echo Current directory was "$current_directory" ...
            cd "$segment_directory"
            echo Current directory is now $(pwd) ...
            ls
            echo Calling make-segment-pdf ...
            # $BACA/scr/make-segment-pdf --do-not-open
            which make-segment-pdf
            make-segment-pdf --do-not-open
            echo Done with make-segment-pdf
            cd "$current_directory"
            echo Current directory is now "$current_directory" ...
            if [ -f "$illustration_ly" ]; then
                echo Found "$illustration_ly" ...
            else
                exit -1
            fi
            if [ -f "$illustration_old_ly" ]; then
                echo Found "$illustration_old_ly" ...
            else
                exit -1
            fi
            differences=$(diff -I '^\\version' "$illustration_ly" "$illustration_old_ly")
            if [ -z "$differences" ]; then
                echo Found matching illustration.ly files ...
            else
                echo Found mismatched illustration.ly files ...
                diff -I '^\\version' "$illustration_ly" "$illustration_old_ly"
                exit -1
            fi
            differences=$(diff -I '^\\version' $illustration_ily $illustration_old_ily)
            if [ -z "$differences" ]; then
                echo Found matching illustration.ily files ...
            else
                echo Found mismatched illustration.ily files ...
                diff -I '^\\version' "$illustration_ily" "$illustration_old_ily"
                exit -1
            fi
            echo
        done
